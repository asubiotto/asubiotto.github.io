<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memory-Management on Alfonso Subiotto</title><link>http://asubiotto.com/tags/memory-management/</link><description>Recent content in Memory-Management on Alfonso Subiotto</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://asubiotto.com/tags/memory-management/index.xml" rel="self" type="application/rss+xml"/><item><title>Disk Spilling in a Vectorized Execution Engine</title><link>http://asubiotto.com/writing/disk-spilling-vectorized-execution-engine/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><guid>http://asubiotto.com/writing/disk-spilling-vectorized-execution-engine/</guid><description>&lt;p>Late last year, we shipped v1 of our &lt;a href="https://www.cockroachlabs.com/docs/stable/vectorized-execution">vectorized execution engine&lt;/a>. It enables column-based query execution and speeds up complex joins and aggregations, improving analytical capabilities in CockroachDB (which is first and foremost optimized for OLTP workloads). v1 of the engine didn’t support disk spilling, which meant it couldn’t execute &lt;a href="https://www.cockroachlabs.com/docs/stable/vectorized-execution/#disk-spilling-operations">certain memory-intensive queries&lt;/a> if there was not enough memory available. Starting in &lt;a href="https://www.cockroachlabs.com/product/whats-new/">CockroachDB v20.1&lt;/a>, these queries fall back to disk (also known as “spilling” to disk).&lt;/p></description></item></channel></rss>