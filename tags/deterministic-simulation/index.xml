<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deterministic-Simulation on Alfonso Subiotto</title><link>http://asubiotto.com/tags/deterministic-simulation/</link><description>Recent content in Deterministic-Simulation on Alfonso Subiotto</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 08 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://asubiotto.com/tags/deterministic-simulation/index.xml" rel="self" type="application/rss+xml"/><item><title>Deterministic Simulation Testing in Rust: A Theater Of State Machines</title><link>http://asubiotto.com/writing/deterministic-simulation-testing-rust/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>http://asubiotto.com/writing/deterministic-simulation-testing-rust/</guid><description>&lt;p>At Polar Signals, we&amp;rsquo;re building a new Rust database using a state machine architecture for deterministic simulation testing (DST). This approach provides complete control over concurrency, time, randomness, and failure injection by implementing core components as single-threaded state machines that communicate through messages.&lt;/p>
&lt;h2 id="the-theater-of-state-machines">The Theater of State Machines&lt;/h2>
&lt;p>Our architecture uses a &amp;ldquo;dimensionality reduction&amp;rdquo; technique by constraining all interactions to message passing. This allows us to centralize control of testing ingredients in a single message bus, which acts as the central director of the testing process.&lt;/p></description></item></channel></rss>